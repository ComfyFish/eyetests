# -------------------------------------------------------------------
# <EYE TESTS>
# -------------------------------------------------------------------
# Eye message tests by Rune
# Enjoy >_<
# -------------------------------------------------------------------

import math

# -------------------------------------------------------------------
# Constants
# -------------------------------------------------------------------
e1 = [2,0,1,0,1,3,2,2,3,3,0,4,0,4,1,1,3,0,2,3,2,1,1,4,3,1,3,0,3,3,0,0,4,0,2,4,0,0,0,
      0,3,2,0,4,1,2,2,0,0,0,1,4,2,2,2,4,2,1,2,2,2,2,0,1,1,0,0,0,3,2,0,1,3,4,1,1,1,3,
      3,1,0,2,2,1,0,4,4,0,0,0,2,0,0,1,0,4,0,4,0,1,4,4,1,4,2,0,3,3,0,2,2,0,3,4,2,4,1,
      2,3,1,3,1,3,1,3,0,0,3,1,1,3,2,1,2,0,1,4,2,2,3,1,3,3,1,4,4,1,3,4,1,4,4,1,2,1,1,
      0,1,4,0,0,3,2,1,2,1,1,4,1,3,0,0,4,1,1,1,0,1,0,0,2,4,1,2,4,1,0,0,4,0,3,1,0,0,1,
      0,4,0,3,3,1,4,3,2,3,4,1,1,2,2,1,0,1,0,1,0,0,4,0,1,2,0,4,1,2,4,4,2,4,4,2,4,0,2,
      1,3,3,3,1,2,2,0,3,3,0,1,0,3,1,1,3,1,1,1,2,1,1,2,1,0,3,2,2,3,1,4,1,3,1,0,4,2,4,
      2,2,4,1,3,0,3,0,4,1,1,0,2,0,3,1,2,3,2,0,4,3,1,3]

w1 = [3,1,1,0,1,3,2,2,3,3,0,4,0,4,1,1,3,0,2,3,2,1,1,4,3,1,3,0,3,3,0,0,4,0,2,4,0,0,4,
      0,3,2,0,4,1,2,2,0,0,0,1,4,2,2,2,4,2,1,2,2,2,2,0,1,1,0,0,0,3,2,0,1,3,4,1,1,0,1,
      0,2,0,2,0,1,0,4,4,0,0,0,1,0,4,0,4,4,0,4,0,1,4,4,1,4,2,0,3,3,0,2,2,0,3,4,1,3,1,
      1,1,1,2,1,3,1,3,0,0,0,1,1,0,2,0,2,0,1,4,2,2,3,1,3,3,1,4,4,1,3,4,1,4,4,1,4,0,1,
      2,1,2,2,2,3,3,0,3,2,4,4,0,0,0,2,4,3,2,3,1,1,1,0,2,2,1,2,3,1,0,3,1,0,2,2,0,4,3,
      4,0,3,4,3,1,4,0,1,2,2,2,1,1,1,3,4,0,2,1,0,3,0,1,4,1,3,3,4,1,2,2,1,3,3,0,1,3,2,
      0,2,4,1,4,2,2,1,4,2,2,2,0,3,0,2,4,2,0,0,1,2,3,2,1,2,4,0,2,3,2,3,2,0,1,4,0,3,3,
      1,0,1,3,2,2,1,1,2,1,3,0,2,0,3,2,2,2,2,0,0,4,2,2,3,1,0,3,1,3,2,2,4,1,1,3]

e2 = [1,2,1,0,1,3,2,2,3,3,0,4,0,4,1,1,3,0,2,3,2,1,1,4,3,1,3,0,3,3,0,0,4,0,2,4,0,0,4,
      1,3,2,0,4,1,2,2,0,0,0,1,4,2,2,2,4,2,1,2,2,2,2,0,1,1,0,0,0,3,2,0,1,3,4,1,1,3,2,
      3,0,2,0,1,3,2,3,0,0,4,4,2,1,0,1,4,3,0,0,1,2,1,4,1,4,0,3,1,1,0,2,4,1,0,4,2,2,3,
      1,0,2,4,4,1,1,1,3,2,2,2,2,3,1,4,0,3,3,3,0,1,3,0,2,3,1,0,1,0,3,2,2,4,4,1,4,2,2,
      0,1,4,1,1,3,0,3,0,1,4,4,1,0,2,0,2,0,3,1,1,1,1,4,2,4,1,0,3,4,2,3,2,1,3,2,1,1,2,
      1,4,1,1,2,0,1,2,0,0,4,0,1,0,3,0,2,2,1,2,2,4,0,2,0,4,0,0,0,0,1,0,3,2,2,1,0,4,0,
      0,0,1,1,3,2,2,1,0,0,4,2,2,3,1,0,4,3,2,4,2,0,1,3,1,0,3,0,1,0,2,0,0,3,0,0,2,2,1,
      0,2,0,1,4,2,2,4,0,3,1,2,0,3,1,3,3,0,2,3,1,0,0,0,1,0,3,3,1,0,4,4,1,2,0,1,4,2,2,
      0,3,4,2,0,1,0,4,3,1,0,1,1,0,0,2,0,0,1,2,4,1,3,1,4,0,2,0,2,2,0,2,0,1,4,1,3,2,2,
      3,1,1]

w2 = [3,0,1,0,1,4,3,0,4,2,3,1,1,1,1,1,3,0,1,0,3,2,0,0,1,1,4,2,1,1,1,4,2,0,4,2,1,4,4,
      1,3,2,0,4,1,0,0,2,4,4,1,2,0,0,2,2,2,1,4,1,0,1,3,2,4,0,0,2,2,2,2,0,1,2,0,4,0,2,
      1,1,0,1,2,0,2,1,0,0,4,4,0,1,2,0,2,2,0,1,4,1,0,0,2,0,2,1,3,0,0,1,3,2,4,3,3,1,2,
      4,0,1,1,3,0,1,1,2,0,1,0,3,2,2,3,1,3,4,3,1,4,2,2,3,1,3,2,1,3,0,3,1,1,0,0,0,0,3,
      1,4,3,1,1,0,2,2,3,0,2,4,2,2,4,2,0,1,0,2,1,2,2,3,1,4,2,2,0,0,1,0,3,1,1,1,2,2,3,
      2,0,3,4,0,1,2,3,0,0,4,1,2,2,2,2,1,3,1,3,2,2,2,0,2,3,0,2,4,2,1,4,0,2,1,1,4,4,0,
      1,2,2,2,0,1,0,0,0,0,1,2,1,4,3,1,0,1,2,3,3,3,1,2,0,1,0,2,2,4,2,0,3,2,2,1,0,1,1,
      0,1,0,1,0,1,3,2,1,2,3,1,1,0,3,0,3,2,0,3,0,2,4,1,3,2,0,3,2,2,0,3,0]

e3 = [2,2,1,0,1,4,3,0,4,0,0,0,1,0,0,3,0,2,2,2,0,2,3,1,2,2,2,2,3,2,1,4,4,1,4,4,2,1,1,
      3,3,2,0,4,1,0,0,2,2,2,2,4,3,1,3,4,1,0,0,3,2,4,2,0,0,0,0,1,0,2,2,0,0,4,2,4,3,1,
      3,1,3,2,2,3,3,1,2,1,2,0,1,3,4,0,0,4,1,4,1,3,0,2,3,1,0,0,0,1,2,3,1,0,4,3,1,3,0,
      0,2,0,0,2,0,1,4,0,0,0,2,0,2,1,2,1,2,3,1,1,1,0,0,0,0,3,1,1,2,2,2,0,1,1,0,0,3,2,
      1,4,0,2,1,4,2,2,2,0,2,3,0,4,2,0,0,1,2,1,4,2,4,1,2,1,1,2,2,3,1,0,4,0,1,0,0,3,4,
      0,0,3,0,2,1,0,3,1,3,0,0,2,1,2,2,1,0,3,1,0,0,0,0,3,1,2,3,3,2,0,0,3,2,4,0,4,2,2,
      0,0,1,2,4,0,2,4,1,0,2,0,2,3,2,0,4,3,0,4,3,0,3,1,2,2,4,1,3,1,3,1,2,3,0,1,1,4,2,
      2,3,2,3,1,1,1,3,0,2,1,1,0,2,1,0,2,0,2,2,2,3,4,1,4,1,2,1,1,3,2,4,0,3,2,1,2,3,0,
      0,0,1,0,3,0,1,2,4,2,2,1,2,2,4,0,3,3,0,0,3,2,1,1,0,2,4,2,1,3,1,3,3,2,3,1,0,0,1,
      4,1,0,2,1,0,1,0,3,3,0,0,4,3,2,0,3,1,4,1,2,1,1,1,4,2,2,3,3,0,4,0,3,4,0,0,0,4,1,
      0,4,1,2,4,0,1,2,3,0,4,0,4,2,3,0,1,0,1,0,4]

w3 = [1,1,1,0,1,4,3,0,4,0,4,4,0,2,3,1,0,1,0,3,3,2,3,2,1,2,0,1,1,3,2,4,0,0,3,2,0,2,3,
      4,3,2,0,4,1,0,0,2,3,4,2,1,2,0,3,0,1,4,4,1,2,1,2,2,2,2,4,0,1,4,2,0,2,1,1,1,3,0,
      0,3,3,0,3,1,1,3,4,2,2,4,1,4,4,1,1,1,3,0,3,0,0,3,1,4,2,2,3,4,0,4,2,1,3,1,1,1,2,
      4,3,1,4,1,3,2,0,0,2,1,0,1,4,1,2,0,2,1,1,2,4,3,1,2,3,0,2,0,3,1,1,1,4,3,0,0,2,1,
      1,0,3,1,3,3,2,1,4,2,0,0,2,3,0,0,1,1,1,4,3,0,3,4,1,4,3,0,3,3,1,1,0,1,2,2,1,2,0,
      1,0,1,1,3,2,2,1,1,1,2,0,4,4,2,3,1,0,1,3,1,3,2,1,2,3,1,0,2,0,3,1,1,0,2,2,2,0,0,
      1,2,0,1,2,0,1,2,3,1,3,0,0,1,1,0,2,4,0,1,4,1,3,3,0,2,1,0,2,3,0,0,2,2,2,0,0,4,4,
      2,1,0,3,1,2,2,2,0,0,0,1,4,4,0,1,2,2,0,0,3,2,3,2,1,4,2,1,4,1,3,3,2,1,3,1,2,2,0,
      1,2,0,2,2,4,0,2,2,2,3,4,2,0,3,0,3,3,1,2,0,2,4,4,0,4,0,2,0,0,0,0,2,1,2,1,1,0,0,
      1,4,1,1,0,2,2,4,2,1,0,3,4,0,2,4,1,1,4,4,2]

e4 = [1,0,1,0,1,4,3,0,4,0,0,0,1,0,0,0,0,0,0,1,0,2,1,3,2,3,3,1,2,0,1,4,2,1,3,3,0,0,3,
      2,3,2,0,4,1,0,0,2,2,2,2,4,3,1,2,1,2,4,3,0,4,3,0,3,0,0,1,1,0,2,0,3,4,2,1,1,3,0,
      1,0,1,0,0,4,2,2,3,2,1,0,0,3,4,3,0,0,1,4,4,2,1,4,2,2,4,0,2,2,2,0,0,3,0,0,0,2,2,
      3,0,3,4,1,1,0,2,2,3,1,3,2,0,2,4,0,3,3,0,2,0,3,0,2,2,2,4,4,1,1,4,2,0,1,0,1,4,1,
      1,4,3,2,3,4,3,0,0,1,2,0,2,4,2,2,3,0,1,1,0,3,0,1,3,0,2,0,0,1,0,4,0,0,3,0,1,3,0,
      0,1,2,3,3,2,4,0,1,3,4,1,3,4,1,3,0,2,4,4,1,3,0,1,4,1,2,4,1,2,2,2,2,3,0,3,3,2,2,
      2,1,2,2,2,2,1,4,3,1,3,0,3,0,2,0,1,3,1,0,2,1,1,3,1,0,2,2,3,0,0,0,3,1,0,3,2,3,2,
      4,3,2,3,3,1,4,1,1,0,3,2,4,0,3,2,0,0,1,2,2,1,0,3,1,1,2,4,3,1,4,4,0,1,2,0,2,3,1,
      1,2,2,0,2,4,2,3,0,1,0,1,3,1,1,2,3,2,2,1,3,0,3,3,4,2,1,2,1,0,2,2,0,1,0,0,3,2,3,
      0,3,4,0,3,4]

w4 = [3,0,1,0,1,4,3,0,4,0,0,0,1,0,0,0,0,0,0,1,0,2,1,3,2,3,3,1,2,0,1,4,0,0,4,0,0,0,2,
      2,3,2,0,4,1,0,0,2,2,2,2,4,3,1,2,1,2,4,3,0,4,3,0,3,0,0,1,1,0,2,2,2,1,1,3,1,4,2,
      2,1,1,3,1,0,2,1,4,0,0,1,0,3,2,1,2,2,2,4,1,1,2,4,3,0,0,1,0,0,1,3,1,2,2,3,3,1,3,
      0,3,0,2,2,1,2,3,0,1,3,2,3,0,1,4,3,0,4,1,3,4,2,0,3,0,0,0,3,2,3,3,2,4,2,1,1,4,0,
      0,4,0,2,1,0,2,4,0,1,0,3,2,0,2,2,1,0,2,4,3,0,2,1,0,1,2,1,0,3,0,1,2,0,3,3,2,3,2,
      4,0,2,2,1,1,1,0,3,1,3,2,4,1,2,1,0,2,1,4,2,4,4,0,3,1,1,1,2,2,0,2,1,4,3,1,1,4,1,
      2,0,4,2,3,3,2,4,1,2,0,3,3,0,2,0,2,3,3,0,1,0,4,1,2,0,4,2,4,1,0,1,2,2,3,2,1,0,1,
      3,1,1,1,4,0,3,1,1,4,2,1,2,3,2,1,2,2,4,1,0,2,4,0,1,3,2,4,4,0,0,3,0,2,2,1,4,4,0,
      2,2,4,3,1,4,1,1,4,0,4,2,1,2,1,1,1,4,1,4,0,1,3,0,0,2,0,2,3,1,0,0,0,0,3,1,0,0,0,
      1,0,2,1,4,0,0,1,1]

e5 = [1,1,1,0,1,4,3,0,4,0,0,0,1,0,0,0,0,0,0,1,0,2,1,3,2,3,3,1,2,0,1,4,3,0,4,4,1,3,3,
      3,3,2,0,4,1,0,0,2,2,2,2,4,3,1,2,1,2,4,3,0,4,3,0,3,0,0,1,1,0,2,1,1,1,1,2,4,3,0,
      1,0,1,2,1,4,2,2,3,3,0,2,0,2,4,0,1,4,1,4,4,2,1,2,2,2,2,2,3,0,2,1,2,2,1,3,2,3,3,
      3,0,3,4,1,1,0,2,2,4,0,1,2,0,2,0,4,1,3,0,2,0,0,2,2,4,2,4,2,0,2,4,0,3,4,1,2,0,2,
      0,1,4,1,1,0,1,1,4,1,0,3,1,1,1,0,1,0,2,4,0,1,1,0,2,0,4,0,1,0,0,1,3,1,0,0,1,3,0,
      2,1,1,2,1,1,1,3,0,1,1,0,4,4,1,2,1,1,1,1,2,4,0,3,4,1,0,1,2,2,0,4,0,0,4,1,2,1,3,
      1,0,2,0,4,1,0,4,1,2,2,1,1,3,4,1,3,0,1,3,3,0,1,3,2,4,3,0,1,1,0,4,2,0,1,0,2,2,1,
      0,2,0,2,0,3,0,0,2,2,4,0,0,1,0,1,2,0,4,4,2,3,1,1,0,4,2,1,1,1,1,4,2,0,3,1,1,0,2,
      1,3,1,2,2,4,2,2,0,2,2,2,0,4,1,2,3,2,4,4,2,1,0,1,3,3,1,4,3,1]

te1 = ["200","231","010","143","222","023","300","104","044","221","132","240","231","222","112","024","311","013","030","303","002","104","023","144","001","310",
       "312","130","223","311","041","034","000","130","201","230","101","024","041","240","142","134","143","132","034","143","023","142","034","144","242","111",
       "010","044","003","133","214","232","113","144","131","220","041","101","110","010","100","040","241","021","244","211","004","244","034","241","004","201",
       "131","133","310","242","204","223","304","311","030","031","134","111","110","022","113","212","103","023","224","133","143"]

tw1 = ["310","231","010","143","222","023","300","104","044","221","132","240","231","222","112","024","311","013","030","303","002","104","023","144","001","104",
       "021","110","202","311","041","034","000","100","101","204","040","024","041","240","142","134","143","132","034","143","023","142","034","144","134","101",
       "214","302","224","133","304","103","242","224","001","110","243","043","232","011","113","100","224","311","233","141","032","121","023","032","041","233",
       "023","014","141","232","212","114","222","312","030","020","243","222","002","021","230","242","122","134","020","133","233","222","014","114","033"]

te2 = ["121","231","010","143","222","023","300","104","044","221","132","240","231","222","112","024","311","013","030","303","002","104","023","144","001","234",
       "301","202","014","143","231","310","042","224","212","130","144","303","003","031","211","034","142","130","310","011","023","224","104","144","224","223",
       "011","144","111","023","031","020","140","044","101","302","020","220","311","221","114","204","240","041","030","004","231","302","132","122","110","042",
       "000","021","131","242","212","040","043","212","230","131","043","033","242","132","010","003","101","303","013","010","204","140","302","100","224","221",
       "031","134","204","201","040","223","100","021","101","140","203","220","123","114"]

tw2 = ["301","231","010","144","300","204","234","141","112","001","132","220","101","143","200","310","112","044","210","221","142","022","041","022","144","204",
       "114","100","121","030","211","210","040","014","013","222","023","312","014","134","104","220","203","312","132","310","010","133","241","003","310","302",
       "142","303","114","100","222","033","020","144","222","224","202","311","021","231","222","023","142","032","202","240","101","043","112","111","224","043",
       "120","112","200","011","001","100","013","122","142","133","101","301","230","233","310","032","012","140","223","024","203","223","220","031"]

te3 = ["223","231","010","144","300","204","002","220","104","130","303","142","220","300","232","241","220","002","230","012","142","024","140","244","214","131",
       "310","023","220","023","311","042","120","200","130","124","002","214","143","111","301","002","310","300","001","211","232","021","041","013","130","230",
       "140","300","210","124","220","132","023","003","042","212","002","011","213","014","240","001","213","211","223","233","100","304","012","040","034","224",
       "002","231","243","110","241","031","022","110","230","122","040","023","042","223","033","141","224","214","131","311","312","042","303","121","142","032",
       "004","011","032","010","121","304","223","001","224","234","030","133","004","213","211","111","024","224","213","033","134","303","234","001","000","141",
       "040","241","243","100","120","013","044"]

tw3 = ["114","231","010","144","300","204","043","244","021","023","103","101","034","143","232","212","122","220","114","103","244","020","032","112","021","033",
       "034","133","034","311","132","004","222","014","141","144","112","201","301","213","004","133","142","032","232","304","041","112","134","031","110","122",
       "101","103","131","233","212","114","201","020","234","240","013","011","141","133","033","124","142","133","030","023","113","110","120","222","122","000",
       "122","010","123","210","122","023","130","100","014","041","021","224","010","304","132","233","021","241","021","143","003","232","221","130","042","024",
       "120","200","221","124","021","002","231","144","201","203","032","243","121","300","244","204","044","110","204","240"]

te4 = ["102","231","010","144","300","204","002","220","104","130","002","210","014","030","214","033","233","003","121","010","142","302","134","123","001","033",
       "103","301","004","114","220","223","213","310","032","204","304","300","143","204","210","034","222","224","024","142","201","240","300","010","021","142",
       "140","213","233","234","304","100","123","140","243","142","233","200","114","140","303","101","304","212","004","211","042","220","033","300","133","220",
       "214","232","223","132","144","113","130","230","304","302","012","003","101","222","111","303","101","212","234","130","004","043","101","023","232","132",
       "123","242","021","124","230","220","100","011","310","231","233","302","214","303","034"]

tw4 = ["302","231","010","144","300","204","002","220","104","130","002","210","014","030","214","033","233","003","121","010","142","220","041","310","001","242",
       "210","031","312","120","212","034","001","231","033","102","124","032","244","311","124","024","303","000","100","230","133","231","224","123","311","043",
       "044","200","212","110","241","300","101","233","204","212","211","200","241","243","024","041","013","112","101","223","010","122","034","133","231","142",
       "203","114","231","043","243","111","204","123","302","232","021","223","304","011","042","041","201","234","244","041","010","032","232","122","104","041",
       "220","024","312","134","110","004","040","132","120","001","111","204","141","040","130","110"]

te5 = ["113","231","010","144","300","204","002","220","104","130","002","210","014","030","214","033","233","003","121","010","142","113","041","214","134","033",
       "103","301","214","114","220","223","304","102","022","204","010","144","143","204","210","202","222","242","234","020","212","042","213","143","232","203",
       "012","114","112","110","111","034","101","013","114","141","012","110","241","210","114","300","204","014","011","220","010","043","100","140","132","310",
       "100","022","042","301","040","201","222","041","130","014","131","020","134","243","013","113","240","243","011","111","041","242","010","130","221","201",
       "132","231","224","244","221","100","223","132","044","131"]

letters  = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
letters2 = ["b", "d", "m", "a", "g", "i", "c", "k", "e", "f", "h", "j", "l", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
message  = [""]*83

# -------------------------------------------------------------------
# <FUNCTIONS>
# -------------------------------------------------------------------
# Description of the functions and stuff
# (I'm trying to make this look nice, okay?)
# -------------------------------------------------------------------
def convert_to_base10(num):
    digits = list(map(int, str(num)))
    return (digits[0]*25) + (digits[1]*5) + (digits[2])

def convert_to_base5(num):
    s = ""
    while num:
        s = str(num % 5) + s
        num /= 5
    while len(s) < 3:
        s = "0" + s
    return s

def convert_to_tri(array):
    new_arr = [""]*(len(array)//3)
    i = 0
    j = 0
    while i < len(array):
        new_arr[j] += str(array[i])
        i += 1
        j = math.floor(i / 3)
    return new_arr

def tri_to_base10(array):
    new_arr = [0]*len(array)
    i = 0
    while i < len(array):
        new_arr[i] = convert_to_base10(array[i])
        i += 1
    return new_arr

# -------------------------------------------------------------------
# <TEST 1>
# -------------------------------------------------------------------
# The eyes are read as trigrams in a row, alternating
# the reading direction between lines
# -------------------------------------------------------------------
def t1_sort(array):
    maxrows = (int(math.ceil(len(array) / 78)))
    lines = [[0] * 78 for _ in range(maxrows)]
    i = 1
    j = 0
    while i < len(array)+1:
        lines[j][i - (j*78) - 1] = array[i-1]
        j = int(i / 78)
        i += 1
    del lines[j][i - (j*78) - 1:]
    i = 0
    while i < len(lines):
        half = int(math.ceil(len(lines[i])/2))
        arr1 = lines[i][:half]
        arr2 = lines[i][half:]
        arr2.reverse()
        lines[i] = arr1 + arr2
        i += 1
    return lines

def t1_combine_sorted_array(array):
    new_arr = []
    i = 0
    while i < len(array):
        new_arr += array[i]
        i += 1
    return new_arr

def t1_get_frequency(array, max_num):
    new_arr = [0]*max_num
    i = 0
    j = 0
    while i < max_num:
        while j < len(array):
            if array[j] == i:
                new_arr[i] += 1
            j += 1
        i += 1
        j = 0
    return new_arr

def t1_do_everything(array):
    new_arr = t1_sort(array)
    new_arr = t1_combine_sorted_array(new_arr)
    print("New reading order:")
    print(new_arr)
    print("")
    new_arr = convert_to_tri(new_arr)
    print("Tri:")
    print(new_arr)
    print("")
    new_arr = tri_to_base10(new_arr)
    print("Base 10:")
    print(new_arr)
    print("---------------")
    print("")
    return new_arr

def test1():
    print("[EAST 1]")
    print("---------------")
    new_e1 = t1_do_everything(e1)

    print("[WEST 1]")
    print("---------------")
    new_w1 = t1_do_everything(w1)

    print("[EAST 2]")
    print("---------------")
    new_e2 = t1_do_everything(e2)

    print("[WEST 2]")
    print("---------------")
    new_w2 = t1_do_everything(w2)

    print("[EAST 3]")
    print("---------------")
    new_e3 = t1_do_everything(e3)

    print("[WEST 3]")
    print("---------------")
    new_w3 = t1_do_everything(w3)

    print("[EAST 4]")
    print("---------------")
    new_e4 = t1_do_everything(e4)

    print("[WEST 4]")
    print("---------------")
    new_w4 = t1_do_everything(w4)

    print("[EAST 5]")
    print("---------------")
    new_e5 = t1_do_everything(e5)

    combined = new_e1 + new_w1 + new_e2 + new_w2 + new_e3 + new_w3 + new_e4 + new_w4 + new_e5
    print("[ALL]")
    print("---------------")
    print("Base 10:")
    print(combined)
    print("")
    frequency = t1_get_frequency(combined, 84)
    print("Letter Frequency:")
    print(frequency)

# -------------------------------------------------------------------
# <TEST 99> - Please ignore this it's silly
# -------------------------------------------------------------------
# Each column is a letter (since there's 26 columns in each message)
# The value of the eye determines the position of the letter
# -------------------------------------------------------------------
def test99(array):
    i = 0
    while i < len(array):
        val = convert_to_base10(array[i])
        message[val] += letters[i%26]
        i += 1
    i = 0
    while i < len(message):
        print(str(i) + ": " + message[i])
        i += 1
    return message

# -------------------------------------------------------------------
# <TEST 2>
# -------------------------------------------------------------------
# Read all right-side up triangles first, then
# read the upside down ones starting from the end
# -------------------------------------------------------------------
def t2_sort(array):
    new_arr = [""]*len(array)
    i = 1
    j = 0
    s = 0
    f = 0
    while j < len(array):
        #print("j: " + str(j) + " i: " + str(i-f))
        new_arr[j] = array[i-s-f]
        if (f == 0): i += 2
        elif (f == 1): i -= 2
        if (i >= len(array)):
            f = 1
            if (len(array) % 2) == 0 : s = 1
        j += 1
    return new_arr

def test2():
    print("EAST 1:")
    print(t2_sort(te1))
    print("")
    print("WEST 1:")
    print(t2_sort(tw1))
    print("")
    print("EAST 2:")
    print(t2_sort(te2))
    print("")
    print("WEST 2:")
    print(t2_sort(tw2))
    print("")
    print("EAST 3:")
    print(t2_sort(te3))
    print("")
    print("WEST 3:")
    print(t2_sort(tw3))
    print("")
    print("EAST 4:")
    print(t2_sort(te4))
    print("")
    print("WEST 4:")
    print(t2_sort(tw4))
    print("")
    print("EAST 5:")
    print(t2_sort(te5))

def main():
    test2()

if __name__ == '__main__':
    main()